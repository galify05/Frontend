const arr = [];
const numbers = [4, 8, 15, 16, 23, 42];
const fruits = ["apple", "orange", "kiwi", "banana"];

const arr1 = [1, "apple", undefined, true]; // —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –≤ –º–∞—Å—Å–∏–≤–∞—Ö –¥–æ–ø—É—Å—Ç–∏–º—ã, –Ω–æ –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è
console.log(arr1);

let kiwi = fruits[2];

let secret = fruits[10];
console.log(secret);

// for loop - —Ü–∏–∫–ª

for (let i = 0; i < fruits.length; i++) {
    console.log(fruits[i], "–ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º", i);
}

let fruitsLength = fruits.length; //–¥–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞ fruits

// while - —Ü–∏–∫–ª (–¥–æ —Ç–µ—Ö –ø–æ—Ä /–ø–æ–∫–∞)
// let i = 0;
// while (i < 6) {
//     console.log(i, " - —Ä–∞–∑");
//     i++;
// }

// if else —É—Å–ª–æ–≤–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä
let isStudent = !true;

if (isStudent) {
    console.log("–ø–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã —Å—Ç—É–¥–µ–Ω—Ç");
} else {
    console.log("—Ç—ã –Ω—É–±–∞—Åüòú");
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —ç–¥–µ–º–µ–Ω—Ç–æ–≤

const animals = ["shark", "panda", "tiger", "otter"];
const snake = "snake";

// push() - –º–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞ –º—É—Ç
animals.push(snake); // –µ—Å–ª–∏ —ç—Ç–æ –ø–æ–ª–æ–∂–∏—Ç—å –≤ –ø–µ—Ä–µ–º–Ω–Ω—É—é, —Ç–æ –ø–æ–ª—É—á—É –¥–ª–∏–Ω—É –º–∞—Å—Å–∏–≤–∞
console.log(animals);

//pop() - —É–¥–∞–ª—è–µ—Ç —Å –∫–æ–Ω—Ü–∞ –º—É—Ç
// animals.pop();
// animals.pop();
const returnedValue = animals.pop();
console.log(returnedValue);
console.log(animals);

// unshift - –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞ –º—É—Ç

returnedValue3 = animals.unshift("panda");
console.log(animals);
console.log(returnedValue3);

// shift - –º–µ—Ç–æ–¥ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –Ω–∞—á–∞–ª–∞ –º–∞—Å—Å–∏–≤–∞ –º—É—Ç

returneedValue4 = animals.shift();
console.log(animals);
console.log(returneedValue4);

// spread syntax - —Å–ø—Ä–µ–¥ –æ–ø–µ—Ä–∞—Ç–æ—Ä (...)
// —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–¥–µ–ª–∞—Ç—å –∫–æ–ø–∏—é –º–∞—Å—Å–∏–≤–∞
const newAnimals = [...animals]; //–∫–æ–ø–∏—è —Ç–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
console.log(newAnimals);

const newAnimals1 = [animals, fruits]; // –º–∞—Å—Å–∏–≤ –≤ –º–∞—Å—Å–∏–≤–µ
console.log(newAnimals1);

const mixedArr = [...animals, ...fruits];
console.log(mixedArr);

const newAnimals2 = ["fox", ...animals, "üê±‚Äçüêâ"];
console.log(newAnimals2);

const num1 = [1, 2, 3];
const num2 = [1, 2, 3];
const isTrue = num1 === num2;
console.log(isTrue);

let copy = structuredClone(mixedArr);

// objects

const person1 = {
    name: "Ron",
    lastname: "Weasley",
    age: 40,
    isAdult: true,
    isMarried: false,
    siblings: ["Jinny", "Fred", "Jeorge"],
};

const person2 = {
    name: "Jinny",
    lastname: "Weasley",
    age: 35,
    isAdult: true,
    isMarried: true,
    siblings: ["Ron", "Fred", "Jeorge"],
};

const family = [person1, person2];
console.log(family);

console.log(person2.name, person2.lastname);

const personInfo2 =
    person2.name +
    " " +
    person2.lastname +
    " is sister of  " +
    person1.name +
    " " +
    person1.lastname;
console.log(personInfo2);

const person1Info = `${person1.name} ${person1.lastname} is brother of ${person2.name} ${person2.lastname}`;

console.log(person1Info);

for (let i = 0; i < family.length; i++) {
    console.log(`${family[i].name} is ${family[i].age}!`);
}
///////////////////////////////////////////
const variable = "hasWife";
console.log("1111111111111111111111111111111111111111111111111111");

const person3 = {
    name: "Bill",
    lastname: "Weasley",
    age: 40,
    isAdult: true,
    [variable]: true,
    "brothers and sisters": ["Ron", "Fred", "George", "Jinny"],
};

console.log(person3);
// console.log(person3);

//–¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è

const { name, lastname, age, siblings } = person1;

console.log(name);
console.log(siblings);
console.log(age);

////////////////////////////////////
console.log();
console.log();
console.log();
////////////////////////////////////

family.push(person3);
// console.log(family);

const [, , bill] = family;
console.log(bill.name);
